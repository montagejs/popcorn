function log(e,t){DEBUG&&console.log("OfflineWorker",e,t)}function postMessage(e){return DEBUG&&log("postMessage",e),self.clients.matchAll().then(function(t){return Promise.all(t.map(function(t){return t.postMessage(e)}))})}function parseAppCacheVersion(e){var t=String(e||"").replace("#","").trim().split(" - "),n=String(t[0]).replace("rev ",""),r=String(t[1])||(new Date).toISOString();return{rev:n,updated:r}}function parseAppCache(e){var t={rev:"",cache:[],network:[]},n=null;return e.split("\n").forEach(function(e){if(e)if(cacheSections.indexOf(e)!==-1)n=e;else if("CACHE MANIFEST"===n)if(0===e.indexOf("#")){var r=String(e||"").split(" ");r[0]&&r[1]&&e.indexOf(r[0])!==-1&&(t.rev+=t[r[0].replace("#")]=r[1])}else t.cache.push(e);else"CACHE:"===n?t.cache.push(e):"NETWORK:"===n&&t.network.push(e)}),log("AppCacheManifest.rev: "+t.rev),t}function getAppCacheManifest(){return new Promise(function(e,t){log("Fetching cache manifest..."),fetch("./manifest.appcache").then(function(n){log("Fetched cache manifest."),200===n.status?n.text().then(function(t){var n=parseAppCache(t);e(n)},t):t("NoAppCache")})["catch"](function(e){log("Fetch cache manifest failed cause: "+e),t(e)})})}function getStorage(){return new Promise(function(e,t){var n=indexedDB.open(dbName,1);n.onupgradeneeded=function(){var e=n.result,t=e.createObjectStore(storeName,{keyPath:"key"});t.createIndex("KeyIndex",["key"])},n.onblocked=function(e){e.target.result&&e.target.result.close(),t(e.target.error||"OpenBlocked")},n.onerror=function(e){t(e.target.error||"OpenError")},n.onsuccess=function(){e(n.result)}})}function getStorageValue(e){return getStorage().then(function(t){var n=t.transaction(storeName,"readwrite"),r=n.objectStore(storeName);return new Promise(function(t,n){var a=r.get(e);a.onsuccess=function(e){var n=e.target.result;t("undefined"!=typeof n&&"string"==typeof n.value?n.value:null)},a.onerror=function(e){t(e.target.error)}})["finally"](function(){t.close()})})}function setStorageValue(e,t){return getStorage().then(function(n){var r=n.transaction(storeName,"readwrite"),a=r.objectStore(storeName);return new Promise(function(n,r){var c=a.put({key:e,value:t});c.onerror=function(e){n(e.target.error)},c.onsuccess=function(e){n(e.target.result)}})["finally"](function(){n.close()})})}function setAppCacheVersion(e){return setStorageValue(APP_VERSION_KEY,e)}function getAppCacheManifestVersion(){return getStorageValue(APP_VERSION_KEY).then(function(e){return caches.has(e).then(function(t){return t===!0?(log("AppCache.rev: "+e),e):null})})}function clearCache(){return caches.keys().then(function(e){return Promise.all(e.map(function(e){return caches["delete"](e)}))})}function setCache(e,t){return clearCache().then(function(){return caches.open(e).then(function(n){return n.addAll(t).then(function(){return log('Updated cache version "'+e+'" urls ('+t.length+")",t),e})})})}function addResponseToCache(e,t,n){return caches.open(e).then(function(e){return e.put(t,n.clone())},function(){return n})}function updateCache(){return pendingCacheUpdate?pendingCacheUpdate:(postMessage("progress"),(pendingCacheUpdate=getAppCacheManifest()).then(function(e){return getAppCacheManifestVersion().then(function(t){return null===t?(log('Installing cache "'+e.rev+'"'),setCache(e.rev,e.cache).then(function(){return log('Installed cache "'+e.rev+'"'),setAppCacheVersion(e.rev).then(function(){return Promise.resolve("noUpdate")})})):t!==e.rev?(log('Updating to cache "'+e.rev+'"'),setCache(e.rev,e.cache).then(function(){return log('Updated cache from "'+t+'" to "'+e.rev+'"'),setAppCacheVersion(e.rev).then(function(){return Promise.resolve("updateReady")})})):(log('Cached "'+e.rev+'"'),Promise.resolve("cached"))})})["finally"](function(){pendingCacheUpdate=null}))}Promise.prototype["finally"]=function(e){var t=this.constructor;return this.then(function(n){return t.resolve(e()).then(function(){return n})},function(n){return t.resolve(e()).then(function(){throw n})})};var DEBUG=!1,cacheSections=["CACHE MANIFEST","CACHE:","NETWORK:"],dbName="OfflineWorker",storeName="OfflineObjectStore",APP_VERSION_KEY="appCacheVersion",pendingCacheUpdate;log("Started",self),self.addEventListener("install",function(e){log("Install...",e),e.waitUntil(updateCache().then(function(){return log("Installed",self),self.skipWaiting()})["catch"](function(e){return log("No Cache cause: "+e),postMessage("err")}).then(function(){log("Installed",self)}))}),self.addEventListener("activate",function(e){log("Activating...",e),e.waitUntil(updateCache().then(function(e){return self.skipWaiting().then(function(){return postMessage(e)})["catch"](function(e){return log("No Update cause: "+e),postMessage("noUpdate")}).then(function(){return log("Activated",self),clients.claim()})}))}),self.addEventListener("message",function(e){"Update"===e.data?(log("UpdateCache...",e),e.waitUntil(updateCache().then(function(e){return postMessage(e)})["catch"](function(e){return log("No Update cause: "+e),postMessage("error")}))):"CacheClear"===e.data&&(log("CacheClear...",e),e.waitUntil(clearCache().then(function(){return postMessage("CacheCleared")})["catch"](function(e){return log("No cache clear cause: "+e),postMessage("error")})))}),self.addEventListener("sync",function(e){log("Push event received",e)}),self.addEventListener("push",function(e){log("Push event received",e)}),self.addEventListener("update",function(e){log("Update event received",e)}),self.addEventListener("fetch",function(e){e.request.url.startsWith(self.location.origin)&&e.respondWith(caches.match(e.request).then(function(t){return t?(log("Cache hit",e.request.url),t):(log("Cache miss",e.request.url),fetch(e.request))}))});