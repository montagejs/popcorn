montageDefine("c2ad217","listen/map-changes",{dependencies:["../weak-map","../_map","./change-descriptor"],factory:function(e,t,r){"use strict";function n(){throw new Error("Can't construct. MapChanges is a mixin.")}function i(e){this.name=e,this.isActive=!1,this._willChangeListeners=null,this._changeListeners=null}function s(e){var t=f.get(e);return t||(t="handle",t+=e.slice(0,1).toUpperCase(),t+=e.slice(1),t+="MapChange",f.set(e,t)),this.specificHandlerMethodName=t,this}function a(e){var t=d.get(e);return t||(t="handle",t+=e.slice(0,1).toUpperCase(),t+=e.slice(1),t+="MapWillChange",d.set(e,t)),this.specificHandlerMethodName=t,this}var o=e("../weak-map"),c=e("../_map"),h=e("./change-descriptor"),p=h.ObjectChangeDescriptor,l=h.ChangeListenersRecord,g=h.ListenerGhost;r.exports=n;var u=(Object.prototype.hasOwnProperty,new o);i.prototype=new p,i.prototype.constructor=i,i.prototype.changeListenersRecordConstructor=s,i.prototype.willChangeListenersRecordConstructor=a;var f=new c;s.prototype=new l,s.prototype.constructor=s,s.prototype.genericHandlerMethodName="handleMapChange";var d=new c;a.prototype=new l,a.prototype.constructor=a,a.prototype.genericHandlerMethodName="handleMapWillChange",n.prototype.getAllMapChangeDescriptors=function(){return u.has(this)||u.set(this,new c),u.get(this)},n.prototype.getMapChangeDescriptor=function(e){var t=this.getAllMapChangeDescriptors();return e=e||"",t.has(e)||t.set(e,new i(e)),t.get(e)};var C=new o,y=function(){return C.get(this)},v=function(e){return C.set(this,e)},M="dispatchesMapChanges",_={get:y,set:v,configurable:!0,enumerable:!1};n.prototype.addMapChangeListener=function(e,t,r){!this.isObservable&&this.makeObservable&&this.makeObservable();var n,i=this.getMapChangeDescriptor(t);n=r?i.willChangeListeners:i.changeListeners,n._current?Array.isArray(n._current)?n._current.push(e):n._current=[n._current,e]:n._current=e,void 0===Object.getOwnPropertyDescriptor(this.__proto__||Object.getPrototypeOf(this),M)&&Object.defineProperty(this.__proto__||Object.getPrototypeOf(this),M,_),this.dispatchesMapChanges=!0;var s=this;return function(){s&&(s.removeMapChangeListener(e,t,r),s=null)}},n.prototype.removeMapChangeListener=function(e,t,r){var n,i=this.getMapChangeDescriptor(t);if(n=r?i.willChangeListeners:i.changeListeners,n._current)if(n._current===e)n._current=null;else{var s=n._current.lastIndexOf(e);if(s===-1)throw new Error("Can't remove map change listener: does not exist: token "+JSON.stringify(t));i.isActive?(n.ghostCount=n.ghostCount+1,n._current[s]=g):n._current.spliceOne(s)}},n.prototype.dispatchMapChange=function(e,t,r){var n=this.getAllMapChangeDescriptors(),i=g;n.forEach(function(n,s){if(!n.isActive){var a=r?n.willChangeListeners:n.changeListeners;if(a&&a._current){var o=a.specificHandlerMethodName;if(Array.isArray(a._current)){if(a._current.length){var c,h,p,l=a.removeCurrentGostListenersIfNeeded();n.isActive=!0;try{for(c=0,h=l.length;c<h;c++)if((p=l[c])!==i)if(p[o])p[o](t,e,this);else{if(!p.call)throw new Error("Handler "+p+" has no method "+o+" and is not callable");p.call(p,t,e,this)}}finally{n.isActive=!1}}}else{n.isActive=!0;try{if(p=a._current,p[o])p[o](t,e,this);else{if(!p.call)throw new Error("Handler "+p+" has no method "+o+" and is not callable");p.call(p,t,e,this)}}finally{n.isActive=!1}}}}},this)},n.prototype.addBeforeMapChangeListener=function(e,t){return this.addMapChangeListener(e,t,!0)},n.prototype.removeBeforeMapChangeListener=function(e,t){return this.removeMapChangeListener(e,t,!0)},n.prototype.dispatchBeforeMapChange=function(e,t){return this.dispatchMapChange(e,t,!0)}}});