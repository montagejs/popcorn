"use strict";var assert=require("chai").assert,isArrayLike=require("../../array-like/is");describe("array-like/is",function(){it("Should return true on array",function(){assert.equal(isArrayLike([]),!0)}),it("Should return true on array-like object",function(){assert.equal(isArrayLike({length:1}),!0)}),it("Should by default return false on string",function(){assert.equal(isArrayLike("foo"),!1)}),it("Should accept strings if specified",function(){assert.equal(isArrayLike("foo",{allowString:!0}),!0)}),it("Should return false on objects with negative length",function(){assert.equal(isArrayLike({length:-1}),!1)}),it("Should return false on plain object",function(){assert.equal(isArrayLike({}),!1)}),it("Should return false on function",function(){assert.equal(isArrayLike(function(){return!0}),!1)}),"function"==typeof Object.create&&it("Should return false on object with no prototype",function(){assert.equal(isArrayLike(Object.create(null)),!1)}),it("Should return false on number",function(){assert.equal(isArrayLike(123),!1)}),it("Should return false on NaN",function(){assert.equal(isArrayLike(NaN),!1)}),it("Should return false on boolean",function(){assert.equal(isArrayLike(!0),!1)}),"function"==typeof Symbol&&it("Should return false on symbol",function(){assert.equal(isArrayLike(Symbol("foo")),!1)}),it("Should return false on null",function(){assert.equal(isArrayLike(null),!1)}),it("Should return false on undefined",function(){assert.equal(isArrayLike(void 0),!1)})});