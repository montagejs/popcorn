montageDefine("9175499","test/reg-exp/is",{dependencies:["chai","../../reg-exp/is"],factory:function(e,n,o){"use strict";var t=e("chai").assert,u=e("../../reg-exp/is");describe("reg-exp/is",function(){it("Should return true on regular expression",function(){t.equal(u(/foo/),!0)}),it("Should return false on native regular expression with no common API exposed",function(){var e=/foo/;e.test=null,t.equal(u(e),!1)}),it("Should return false on RegExp.prototype",function(){t.equal(u(RegExp.prototype),!1)}),it("Should return false on regexp like string",function(){t.equal(u("/foo/"),!1)}),it("Should return false on plain object",function(){t.equal(u({}),!1)}),it("Should return false on function",function(){t.equal(u(function(){return!0}),!1)}),it("Should return false on array",function(){t.equal(u([]),!1)}),"function"==typeof Object.create&&it("Should return false on object with no prototype",function(){t.equal(u(Object.create(null)),!1)}),it("Should return false on string",function(){t.equal(u("foo"),!1)}),it("Should return false on empty string",function(){t.equal(u(""),!1)}),it("Should return false on number",function(){t.equal(u(123),!1)}),it("Should return false on NaN",function(){t.equal(u(NaN),!1)}),it("Should return false on boolean",function(){t.equal(u(!0),!1)}),"function"==typeof Symbol&&it("Should return false on symbol",function(){t.equal(u(Symbol("foo")),!1)}),it("Should return false on null",function(){t.equal(u(null),!1)}),it("Should return false on undefined",function(){t.equal(u(void 0),!1)})})}});