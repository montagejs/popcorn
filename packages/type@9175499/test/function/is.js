"use strict";var assert=require("chai").assert,isFunction=require("../../function/is"),arrowFunctionIfSupported=require("../_lib/arrow-function-if-supported"),classIfSupported=require("../_lib/class-if-supported");describe("function/is",function(){it("Should return true on function",function(){assert.equal(isFunction(function(){return!0}),!0)}),arrowFunctionIfSupported&&it("Should return true on arrow function",function(){assert.equal(isFunction(arrowFunctionIfSupported),!0)}),classIfSupported&&it("Should return true on class",function(){assert.equal(isFunction(classIfSupported),!0)}),it("Should return false on reg-exp",function(){assert.equal(isFunction(/foo/),!1)}),it("Should return false on plain object",function(){assert.equal(isFunction({}),!1)}),it("Should return false on array",function(){assert.equal(isFunction([]),!1)}),"function"==typeof Object.create&&it("Should return false on object with no prototype",function(){assert.equal(isFunction(Object.create(null)),!1)}),it("Should return false on string",function(){assert.equal(isFunction("foo"),!1)}),it("Should return false on empty string",function(){assert.equal(isFunction(""),!1)}),it("Should return false on number",function(){assert.equal(isFunction(123),!1)}),it("Should return false on NaN",function(){assert.equal(isFunction(NaN),!1)}),it("Should return false on boolean",function(){assert.equal(isFunction(!0),!1)}),"function"==typeof Symbol&&it("Should return false on symbol",function(){assert.equal(isFunction(Symbol("foo")),!1)}),it("Should return false on null",function(){assert.equal(isFunction(null),!1)}),it("Should return false on undefined",function(){assert.equal(isFunction(void 0),!1)})});