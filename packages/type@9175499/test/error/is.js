"use strict";var assert=require("chai").assert,isError=require("../../error/is");describe("error/is",function(){it("Should return true on error",function(){assert.equal(isError(new Error),!0)}),it("Should return false on native error with no common API exposed",function(){var r=new Error;r.message=null,assert.equal(isError(r),!1)}),it("Should return false on Error.prototype",function(){assert.equal(isError(Error.prototype),!1)}),"function"==typeof Object.create&&(it("Should return true on custom built ES5 era error",function(){var r=function(){Error.call(this)};r.prototype=Object.create(Error.prototype),assert.equal(isError(new r),!0)}),it("Should return false on object with no prototype",function(){assert.equal(isError(Object.create(null)),!1)})),it("Should return false on plain object",function(){assert.equal(isError({}),!1)}),it("Should return false on function",function(){assert.equal(isError(function(){return!0}),!1)}),it("Should return false on array",function(){assert.equal(isError([]),!1)}),it("Should return false on string",function(){assert.equal(isError("foo"),!1)}),it("Should return false on empty string",function(){assert.equal(isError(""),!1)}),it("Should return false on number",function(){assert.equal(isError(123),!1)}),it("Should return false on NaN",function(){assert.equal(isError(NaN),!1)}),it("Should return false on boolean",function(){assert.equal(isError(!0),!1)}),"function"==typeof Symbol&&it("Should return false on symbol",function(){assert.equal(isError(Symbol("foo")),!1)}),it("Should return false on null",function(){assert.equal(isError(null),!1)}),it("Should return false on undefined",function(){assert.equal(isError(void 0),!1)})});