"use strict";var assert=require("chai").assert,isDate=require("../../date/is");describe("date/is",function(){it("Should return true on date",function(){assert.equal(isDate(new Date),!0)}),it("Should return false on invalid date",function(){assert.equal(isDate(new Date("foo")),!1)}),it("Should return false on native date with no common API exposed",function(){var e=new Date;e.getFullYear=null,assert.equal(isDate(e),!1)}),it("Should return false on Date.prototype",function(){assert.equal(isDate(Date.prototype),!1)}),it("Should return false on time value",function(){assert.equal(isDate(12312313),!1)}),it("Should return false on plain object",function(){assert.equal(isDate({}),!1)}),it("Should return false on function",function(){assert.equal(isDate(function(){return!0}),!1)}),it("Should return false on array",function(){assert.equal(isDate([]),!1)}),"function"==typeof Object.create&&it("Should return false on object with no prototype",function(){assert.equal(isDate(Object.create(null)),!1)}),it("Should return false on string",function(){assert.equal(isDate("foo"),!1)}),it("Should return false on empty string",function(){assert.equal(isDate(""),!1)}),it("Should return false on number",function(){assert.equal(isDate(123),!1)}),it("Should return false on NaN",function(){assert.equal(isDate(NaN),!1)}),it("Should return false on boolean",function(){assert.equal(isDate(!0),!1)}),"function"==typeof Symbol&&it("Should return false on symbol",function(){assert.equal(isDate(Symbol("foo")),!1)}),it("Should return false on null",function(){assert.equal(isDate(null),!1)}),it("Should return false on undefined",function(){assert.equal(isDate(void 0),!1)})});