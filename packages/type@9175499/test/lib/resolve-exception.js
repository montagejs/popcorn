"use strict";var assert=require("chai").assert,handleException=require("../../lib/resolve-exception");describe("lib/handle-exception",function(){it("Should throw TypeError",function(){try{throw handleException(12,"Invalid value"),new Error("Unexpected")}catch(e){assert.equal(e.name,"TypeError"),assert.equal(e.message,"Invalid value")}}),it("Should resolve value in default message",function(){try{throw handleException(12,"%v is invalid",{}),new Error("Unexpected")}catch(e){assert.equal(e.message,"12 is invalid")}}),it("Should support optional values via inputOptions.isOptional",function(){assert.equal(handleException(null,"%v is invalid",{isOptional:!0},null))}),it("Should support optional values via inputOptions.default",function(){assert.equal(handleException(null,"%v is invalid",{"default":"bar"}),"bar")}),it("Should support custome error message via inputOptions.errorMessage",function(){try{throw handleException(null,"%v is invalid",{errorMessage:"%v is not supported age"}),new Error("Unexpected")}catch(e){assert.equal(e.message,"null is not supported age")}})});