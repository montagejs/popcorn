"use strict";var assert=require("chai").assert,isPromise=require("../../promise/is");describe("promise/is",function(){"function"==typeof Promise&&it("Should return true on promise",function(){assert.equal(isPromise(Promise.resolve()),!0)}),it("Should return false on non-promise thenable",function(){assert.equal(isPromise({then:function(){return!0}}),!1)}),it("Should return false on plain object",function(){assert.equal(isPromise({}),!1)}),it("Should return false on function",function(){assert.equal(isPromise(function(){return!0}),!1)}),it("Should return false on array",function(){assert.equal(isPromise([]),!1)}),"function"==typeof Object.create&&it("Should return false on object with no prototype",function(){assert.equal(isPromise(Object.create(null)),!1)}),it("Should return false on string",function(){assert.equal(isPromise("foo"),!1)}),it("Should return false on empty string",function(){assert.equal(isPromise(""),!1)}),it("Should return false on number",function(){assert.equal(isPromise(123),!1)}),it("Should return false on NaN",function(){assert.equal(isPromise(NaN),!1)}),it("Should return false on boolean",function(){assert.equal(isPromise(!0),!1)}),"function"==typeof Symbol&&it("Should return false on symbol",function(){assert.equal(isPromise(Symbol("foo")),!1)}),it("Should return false on null",function(){assert.equal(isPromise(null),!1)}),it("Should return false on undefined",function(){assert.equal(isPromise(void 0),!1)})});