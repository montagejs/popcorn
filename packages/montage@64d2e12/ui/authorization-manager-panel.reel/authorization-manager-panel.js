var Component=require("ui/component").Component,Promise=require("core/promise").Promise,application=require("core/application").application,Map=require("collections/map"),Montage=require("montage").Montage;exports.AuthorizationManagerPanel=Component.specialize({panels:{get:function(){return this._panels||(this._panels=[]),this._panels},set:function(e){console.warn("AuthorizationManagerPanel.panels.set",e)}},authorizationManager:{value:void 0},approveAuthorization:{value:function(e,i){i&&this._deregisterPanel(i,e),!this.panels.length&&this._authorizationResolve&&this._authorizationResolve(e)}},_deregisterPanel:{value:function(e,i){var t=this.panels.indexOf(e),a=Montage.getInfoForObject(e);t!==-1&&this.panels.splice(t,1),i?this._authorizationPromiseByPanel.get(e).resolve(i):this._authorizationPromiseByPanel.get(e).reject(new Error("Authorization Rejected for panel ("+a.id+")")),this._authorizationPromiseByPanel["delete"](e)}},_authorizationPromiseByPanel:{get:function(){return this.__authorizationPromiseByPanel||(this.__authorizationPromiseByPanel=new Map),this.__authorizationPromiseByPanel}},authorizeWithPanel:{value:function(e){var i,t=this;return this._authorizationPromiseByPanel.has(e)?i=Promise.resolve(null):(i=new Promise(function(i,a){t._authorizationPromiseByPanel.set(e,{resolve:i,reject:a})}),this.panels.push(e)),i}},_authorizationResolve:{value:void 0},cancelAuthorization:{value:function(e){e&&this._deregisterPanel(e),application.applicationModal&&application.applicationModal.hide(this),this._authorizationResolve&&this._authorizationReject("CANCEL")}},_authorizationReject:{value:void 0},runModal:{value:function(){var e=this;return new Promise(function(i,t){e._authorizationResolve=i,e._authorizationReject=t,application.applicationModal&&application.applicationModal.show(e)})}}});