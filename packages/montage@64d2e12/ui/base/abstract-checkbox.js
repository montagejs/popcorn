var AbstractControl=require("./abstract-control").AbstractControl,PressComposer=require("../../composer/press-composer").PressComposer,CLASS_PREFIX="montage-Checkbox",AbstractCheckbox=exports.AbstractCheckbox=AbstractControl.specialize({constructor:{value:function e(){if(this.constructor===e)throw new Error("AbstractCheckbox cannot be instantiated.");this._pressComposer=new PressComposer,this.addComposer(this._pressComposer),this.defineBindings({"classList.has('montage--disabled')":{"<-":"!enabled"},"classList.has('montage--active')":{"<-":"active"},"classList.has('montage-Checkbox--checked')":{"<-":"checked"}})}},hasTemplate:{value:!1},active:{value:!1},value:{value:null},_checked:{value:!1},checked:{set:function(e){this._checked=e},get:function(){return this._checked}},enabled:{value:!0},_pressComposer:{value:null},enterDocument:{value:function(e){e&&this.element.setAttribute("role","checkbox")}},draw:{value:function(){this.checked?this.element.setAttribute("aria-checked","true"):this.element.setAttribute("aria-checked","false")}},toggleChecked:{value:function(){this.enabled&&(this.checked=!this.checked,this.dispatchActionEvent())}},handlePressStart:{value:function(e){this.active=!0,e.touch&&document.addEventListener("touchmove",this,!1)}},handlePress:{value:function(){this.active=!1,this.toggleChecked()}},handlePressCancel:{value:function(){this.active=!1,document.removeEventListener("touchmove",this,!1)}},prepareForActivationEvents:{value:function(){this._pressComposer.addEventListener("pressStart",this,!1),this._pressComposer.addEventListener("press",this,!1),this._pressComposer.addEventListener("pressCancel",this,!1)}},activate:{value:function(){this.toggleChecked()}}});