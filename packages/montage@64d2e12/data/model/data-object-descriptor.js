var ObjectDescriptor=require("./object-descriptor").ObjectDescriptor,DataPropertyDescriptor=require("./data-property-descriptor").DataPropertyDescriptor;exports.DataObjectDescriptor=ObjectDescriptor.specialize({identifierNames:{value:[]},propertyDescriptors:{get:function(){return Object.getOwnPropertyDescriptor(ObjectDescriptor.prototype,"propertyDescriptors").get.call(this)}},setPropertyDescriptor:{value:function(t,e){ObjectDescriptor.prototype.setPropertyDescriptor.call(this,t,e)}},makePropertyDescriptor:{value:function(){return new DataPropertyDescriptor}},_addRelationships:{value:function(t){var e,r,i;if(t)for(e=Object.keys(t),r=0,i=e.length;r<i;r+=1)this._addRelationship(e[r],t[e[r]])}},_addRelationship:{value:function(t,e){this.propertyDescriptors[t]||this.setPropertyDescriptor(t,this.makePropertyDescriptor()),this.propertyDescriptors[t].isRelationship=!0,this.propertyDescriptors[t].isGlobal=!!e.isGlobal}}},{getterFor:{value:function(t,e,r,i,s){var o=this._parseGetterForArguments.apply(this,arguments),p=ObjectDescriptor.getterFor.call(this,o.exports,o.name,o.types);return function(){return this.hasOwnProperty("_TYPE")||(this._TYPE=p.call(this),this._TYPE.identifierNames=o.identifiers,this._TYPE._addRelationships(o.relationships)),this._TYPE}}},_parseGetterForArguments:{value:function(){var t,e,r,i;if(t={exports:arguments[0],name:arguments[1]},arguments.length>3&&this._isRealObject(arguments[2])?(t.types=arguments[2],e=3):e=2,Array.isArray(arguments[e]))t.identifiers=arguments[e],e+=1;else{for(r=e,i=arguments.length;r<i&&"string"==typeof arguments[r];r+=1)t.identifiers=Array.prototype.slice.call(arguments,e,r);e=r}return t.relationships=arguments[e],t}},_isRealObject:{value:function(t){return t&&"object"==typeof t&&!Array.isArray(t)&&!(t instanceof String)&&!(t instanceof Number)&&!(t instanceof Boolean)}}});