var Converter=require("core/converter/converter").Converter,ObjectDescriptorReference=require("core/meta/object-descriptor-reference").ObjectDescriptorReference,Promise=require("core/promise").Promise,Scope=require("frb/scope"),parse=require("frb/parse"),compile=require("frb/compile-evaluator");exports.RawValueToObjectConverter=Converter.specialize({serializeSelf:{value:function(e){e.setProperty("convertExpression",this.convertExpression),e.setProperty("foreignDescriptor",this._foreignDescriptorReference),e.setProperty("revertExpression",this.revertExpression),e.setProperty("root",this.owner),e.setProperty("serviceIdentifier",this.serviceIdentifier),e.setProperty("service",this.service)}},deserializeSelf:{value:function(e){var r=e.getProperty("convertExpression");r&&(this.convertExpression=r),r=e.getProperty("revertExpression"),r&&(this.revertExpression=r),r=e.getProperty("foreignDescriptor"),r instanceof ObjectDescriptorReference?e.isSync?this.foreignDescriptor=e._context._require(r._reference.objectDescriptorModule.id).montageObject:this._foreignDescriptorReference=r:r&&(this.foreignDescriptor=r),r=e.getProperty("service"),r&&(this.service=r),r=e.getObjectByLabel("root"),r&&(this.owner=r),r=e.getProperty("serviceIdentifier"),r&&(this.serviceIdentifier=r),e.deserializeUnit("bindings")}},initWithConvertExpression:{value:function(e){return this.convertExpression=e,this}},_convertExpression:{value:null},convertExpression:{get:function(){return this._convertExpression},set:function(e){e!==this._convertExpression&&(this._convertExpression=e,this._convertSyntax=void 0)}},_convertSyntax:{value:void 0},convertSyntax:{get:function(){return this._convertSyntax||(void 0===this._convertSyntax?this._convertSyntax=this.convertExpression?parse(this.convertExpression):null:null)}},_revertExpression:{value:null},revertExpression:{get:function(){return this._revertExpression},set:function(e){e!==this._revertExpression&&(this._revertExpression=e,this._revertSyntax=void 0)}},_revertSyntax:{value:void 0},revertSyntax:{get:function(){return this._revertSyntax||(void 0===this._revertSyntax?this._revertSyntax=this.revertExpression?parse(this.revertExpression):null:null)}},_compiledRevertSyntax:{value:void 0},compiledRevertSyntax:{get:function(){return this._compiledRevertSyntax||(void 0===this._compiledRevertSyntax?this._compiledRevertSyntax=this.revertSyntax?compile(this.revertSyntax):null:null)}},foreignDescriptor:{serializable:!1,get:function(){var e=this._foreignDescriptor instanceof ObjectDescriptorReference;return e?this._foreignDescriptor:this._foreignDescriptor?Promise.resolve(this._foreignDescriptor):this._foreignDescriptorReference&&this._foreignDescriptorReference.promise(require)},set:function(e){this._foreignDescriptor=e}},objectDescriptor:{get:function(){return this._objectDescriptor?Promise.resolve(this._objectDescriptor):this.owner&&this.owner.objectDescriptor?Promise.resolve(this.owner.objectDescriptor):this._isAsync(this.owner)?this._objectDescriptorReference:void 0},set:function(e){this._objectDescriptor=e}},_objectDescriptorReference:{get:function(){var e=this;return this.owner.then(function(r){var t=r.objectDescriptor;return e.objectDescriptor=t,t})}},_isAsync:{value:function(e){return e&&e.then&&"function"==typeof e.then}},_descriptorToFetch:{get:function(){return this.__descriptorToFetch||(this.foreignDescriptor&&this.foreignDescriptor.promise?this.__descriptorToFetch=this.foreignDescriptor.promise(require):this.foreignDescriptor?this.__descriptorToFetch=this.foreignDescriptor:this.__descriptorToFetch=this.objectDescriptor),this.__descriptorToFetch}},owner:{get:function(){return this._owner?this._owner.then?this._owner:Promise.resolve(this._owner):void 0},set:function(e){this._owner=e}},__scope:{value:null},scope:{get:function(){return this.__scope||(this.__scope=new Scope(this))}},service:{get:function(){return this._service?this._service:this.owner?this.owner.then(function(e){return e.service}):void 0},set:function(e){this._service=!e||e.then?e:Promise.resolve(e)}},serviceIdentifier:{value:void 0},convert:{value:function(e){return Promise.resolve(e)}},revert:{value:function(e){return Promise.resolve(e)}}});