var Montage=require("../core").Montage,ModelGroup=require("./model-group").ModelGroup,ObjectDescriptorModule=require("./object-descriptor"),deprecate=require("../deprecate"),application=require("../application").application,_group=null,Model=exports.Model=Montage.specialize({constructor:{value:function(){return this._name=null,this.modelModuleId=null,this.isDefault=!1,this._objectDescriptorForPrototypeTable={},this}},initWithNameAndRequire:{value:function(e,r){if(!e)throw new Error("name is required");if(!r)throw new Error("require is required");return this._name=e,this._require=r,Model.group.addModel(this),this}},serializeSelf:{value:function(e){this.version>1&&e.setProperty("version",this.version),e.setProperty("name",this.name),this.objectDescriptors.length>0&&e.setProperty("objectDescriptors",this.objectDescriptors),e.setProperty("objectModelModuleId",this.modelInstanceModuleId)}},deserializeSelf:{value:function(e){var r=e.getProperty("version");void 0!==r&&(this.version=r),r=e.getProperty("name"),void 0!==r&&(this._name=r),r=e.getProperty("objectDescriptors")||e.getProperty("blueprints"),r&&(this._objectDescriptors=r),r=e.getProperty("objectModelModuleId")||e.getProperty("binderModuleId"),void 0!==r&&(this.modelInstanceModuleId=r)}},_name:{value:null},name:{get:function(){return this._name}},_require:{value:null},require:{get:function(){return this._require}},_objectDescriptorForPrototypeTable:{value:null},identifier:{get:function(){return["objectModel",this.name.toLowerCase()].join("_")}},modelInstanceModuleId:{serializable:!1,value:null},isDefault:{serializable:!1,value:!1},_objectDescriptors:{value:null},objectDescriptors:{get:function(){return this._objectDescriptors||(this._objectDescriptors=[])}},addObjectDescriptor:{value:function(e){if(null!==e){var r=this.objectDescriptors.indexOf(e);r<0&&(null!==e.model&&e.model!==this&&e.model.removeObjectDescriptor(e),this.objectDescriptors.push(e),e.model=this)}return e}},removeObjectDescriptor:{value:function(e){if(null!==e){var r=this.objectDescriptors.indexOf(e);r>=0&&(this.objectDescriptors.splice(r,1),e.model=null)}return e}},addObjectDescriptorNamed:{value:function(e){return this.addObjectDescriptor((new ObjectDescriptorModule.ObjectDescriptor).initWithName(e))}},objectDescriptorForPrototype:{value:deprecate.deprecateMethod(void 0,function(e){return this.objectDescriptorForName(e)},"objectDescriptorForPrototype","objectDescriptorForName",!0)},objectDescriptorForName:{value:function(e){for(var r=this.objectDescriptors,t=null,o=r.length,i=0;i<o&&!t;i++)r[i].name===e&&(t=r[i]);return t}},_objectDescriptorObjectProperty:{value:null},ObjectProperty:{get:function(){return this._objectDescriptorObjectProperty||(this._objectDescriptorObjectProperty=Model.group.defaultObjectDescriptorObjectProperty),this._objectDescriptorObjectProperty}},objectDescriptorModuleId:require("../core")._objectDescriptorModuleIdDescriptor,objectDescriptor:require("../core")._objectDescriptorDescriptor,blueprints:{get:deprecate.deprecateMethod(void 0,function(){return this.objectDescriptors},"blueprints","objectDescriptors",!0)},addBlueprint:{value:deprecate.deprecateMethod(void 0,function(e){return this.addObjectDescriptor(e)},"addBlueprint","addObjectDescriptor",!0)},removeBlueprint:{value:deprecate.deprecateMethod(void 0,function(e){return this.removeObjectDescriptor(e)},"removeBlueprint","removeObjectDescriptor",!0)},addBlueprintNamed:{value:deprecate.deprecateMethod(void 0,function(e){return this.addObjectDescriptorNamed(e)},"addBlueprintNamed","addObjectDescriptorNamed",!0)},blueprintForPrototype:{value:deprecate.deprecateMethod(void 0,function(e){return this.blueprintForName(e)},"blueprintForPrototype","blueprintForName",!0)},blueprintForName:{value:deprecate.deprecateMethod(void 0,function(e){return this.objectDescriptorForName(e)},"blueprintForName","objectDescriptorForName",!0)},blueprintModuleId:require("../core")._objectDescriptorModuleIdDescriptor,blueprint:require("../core")._objectDescriptorDescriptor},{group:{get:function(){return null===_group&&(_group=new ModelGroup,_group.name=application?application.name:""),_group}},manager:{get:deprecate.deprecateMethod(void 0,function(){return exports.Model.group},"Binder.manager","Model.group")}});