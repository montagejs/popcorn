montageDefine("64d2e12","core/meta/validation-rule",{dependencies:["../core","./validation-semantics","../selector","../deprecate","../core","../core","../core","../core"],factory:function(e,t,i){var r=e("../core").Montage,o=e("./validation-semantics").PropertyValidationSemantics,a=e("../selector").Selector,n=e("../deprecate");t.PropertyValidationRule=r.specialize({initWithNameAndObjectDescriptor:{value:function(e,t){return this._name=e,this._owner=t,this}},serializeSelf:{value:function(e){e.setProperty("name",this.name),e.setProperty("objectDescriptor",this.owner,"reference"),e.setProperty("messageKey",this.messageKey),e.setAllValues()}},deserializeSelf:{value:function(e){var t;t=e.getProperty("name"),void 0!==t&&(this._name=t),t=e.getProperty("objectDescriptor")||e.getProperty("blueprint"),void 0!==t&&(this._owner=t),t=e.getProperty("messageKey"),void 0!==t&&(this._messageKey=t);for(var i=r.getSerializablePropertyNames(this),o=0,a=i.length;o<a;o++){var n=i[o];this[n]=e.getProperty(n)}}},_owner:{value:null},owner:{get:function(){return this._owner}},identifier:{get:function(){return[this.objectDescriptor.identifier,"rule",this.name].join("_")}},_name:{value:""},name:{get:function(){return this._name}},_validationSelector:{value:null},validationSelector:{serializable:!1,get:function(){return this._validationSelector||(this._validationSelector=a["false"]),this._validationSelector},set:function(e){this._validationSelector=e}},_messageKey:{value:""},messageKey:{serializable:!1,get:function(){return this._messageKey&&0!==this._messageKey.length?this._messageKey:this._name},set:function(e){this._messageKey=e}},_propertyValidationEvaluator:{value:null},evaluateRule:{value:function(e){if(null===this._propertyValidationEvaluator){var t=(new o).initWithBlueprint(this.objectDescriptor);this._propertyValidationEvaluator=t.compile(this.selector.syntax)}return this._propertyValidationEvaluator(e)}},objectDescriptorModuleId:e("../core")._objectDescriptorModuleIdDescriptor,objectDescriptor:e("../core")._objectDescriptorDescriptor,initWithNameAndBlueprint:{value:n.deprecateMethod(void 0,function(e,t){return this.initWithNameAndObjectDescriptor(e,t)},"initWithNameAndBlueprint","initWithNameAndObjectDescriptor")},blueprintModuleId:e("../core")._objectDescriptorModuleIdDescriptor,blueprint:e("../core")._objectDescriptorDescriptor})}});