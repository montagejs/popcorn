function makeParser(e){return function(n){var r,t=0,c=1,o=e.apply(this,[function(e){return r=e,expectEof()}].concat(Array.prototype.slice.call(arguments,1)));try{for(var i=0;i<n.length;i++)o=o(n[i],{index:i,line:c,column:t}),"\n"===n[i]?(c++,t=0):t++;o=o("",{index:i,line:c,column:t})}catch(u){if(u.loc){var a=u.loc;n.length>80?u.message+=" at line "+a.line+", column "+a.column:u.message+=" in "+JSON.stringify(n)+" at index "+a.index}throw u}return r}}function expectEof(){return function(e,n){if(""!==e){var r=new Error("Unexpected "+JSON.stringify(e));throw r.loc=n,r}return function t(){return t}}}function makeExpect(e){return function(n,r){return function(r,t){return r===e?n(r,t):n(null,t)(r,t)}}}exports.makeParser=makeParser,exports.expectEof=expectEof,exports.makeExpect=makeExpect;