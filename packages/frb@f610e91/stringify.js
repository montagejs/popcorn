"use strict";function stringify(e,r){return stringify.semantics.stringify(e,r)}function makeBlockStringifier(e){return function(r,n,t){var i=e+"{"+t(r.args[1],n)+"}";return"value"===r.args[0].type?i:t(r.args[0],n)+"."+i}}var parse=require("./parse"),precedence=require("./language").precedence,typeToToken=require("./language").operatorTypes,tokenToType=require("./language").operatorTokens;module.exports=stringify,stringify.semantics={makeBlockStringifier:makeBlockStringifier,stringify:function(e,r,n){function t(e){var n=a(e,r);return n?n:"this"}var i,a=this.stringify.bind(this),o=this.stringifiers;if(o[e.type])i=o[e.type](e,r,a);else if(e.inline)i="&"+e.type+"("+e.args.map(t).join(", ")+")";else{var s;1===e.args.length&&"mapBlock"===e.args[0].type?(s=e.type+"{"+a(e.args[0].args[1],r)+"}",e=e.args[0]):s=e.type+"("+e.args.slice(1).map(t).join(", ")+")",i="value"===e.args[0].type?s:a(e.args[0],r)+"."+s}return!n||n.type===e.type&&"if"!==n.type||precedence.get(n.type).has(e.type)?i:"("+i+")"},stringifiers:{value:function(e,r,n){return""},literal:function(e,r,n){return"string"==typeof e.value?"'"+e.value.replace("'","\\'")+"'":""+e.value},parameters:function(e,r,n){return"$"},record:function(e,r,n){return"{"+Object.map(e.args,function(e,t){var i;return i="value"===e.type?"this":n(e,r),t+": "+i}).join(", ")+"}"},tuple:function(e,r,n){return"["+Object.map(e.args,function(e){return"value"===e.type?"this":n(e)}).join(", ")+"]"},component:function(e,r){var n;return r&&r.components&&e.component?r.components.getObjectLabel?n=r.components.getObjectLabel(e.component):r.components.getLabelForObject&&(n=r.components.getLabelForObject(e.component)):n=e.label,"@"+n},element:function(e){return"#"+e.id},mapBlock:makeBlockStringifier("map"),filterBlock:makeBlockStringifier("filter"),someBlock:makeBlockStringifier("some"),everyBlock:makeBlockStringifier("every"),sortedBlock:makeBlockStringifier("sorted"),sortedSetBlock:makeBlockStringifier("sortedSet"),groupBlock:makeBlockStringifier("group"),groupMapBlock:makeBlockStringifier("groupMap"),minBlock:makeBlockStringifier("min"),maxBlock:makeBlockStringifier("max"),property:function(e,r,n){return"value"===e.args[0].type?"string"==typeof e.args[1].value?e.args[1].value:"literal"===e.args[1].type?"."+e.args[1].value:"this["+n(e.args[1],r)+"]":"parameters"===e.args[0].type?"$"+e.args[1].value:"literal"===e.args[1].type&&/^[\w\d_]+$/.test(e.args[1].value)?n(e.args[0],r,{type:"scope"})+"."+e.args[1].value:n(e.args[0],{type:"scope"},r)+"["+n(e.args[1],r)+"]"},"with":function(e,r,n){var t=n(e.args[1],r,e);return n(e.args[0],r)+"."+t},not:function(e,r,n){return"equals"===e.args[0].type?n(e.args[0].args[0],r,{type:"equals"})+" != "+n(e.args[0].args[1],r,{type:"equals"}):"!"+n(e.args[0],r,e)},neg:function(e,r,n){return"-"+n(e.args[0],r,e)},toNumber:function(e,r,n){return"+"+n(e.args[0],r,e)},parent:function(e,r,n){return"^"+n(e.args[0],r,e)},"if":function(e,r,n){return n(e.args[0],r,e)+" ? "+n(e.args[1],r)+" : "+n(e.args[2],r)},event:function(e,r,n){return e.when+" "+e.event+" -> "+n(e.listener,r)},binding:function(e,r,n,t){var i=t(r.args[0],n)+" "+e+" "+t(r.args[1],n),a="",o=r.descriptor;if(o)for(var s in o)a+=", "+s+": "+t(o[s],n);return i+a},bind:function(e,r,n){return this.binding("<-",e,r,n)},bind2:function(e,r,n){return this.binding("<->",e,r,n)},assign:function(e,r,n){return n(e.args[0],r)+": "+n(e.args[1],r)},block:function(e,r,n){var t="@"+e.label;return e.connection&&("prototype"===e.connection?t+=" < ":"object"===e.connection&&(t+=" : "),t+=n({type:"literal",value:e.module}),e.exports&&"value"!==e.exports.type&&(t+=" "+n(e.exports,r))),t+" {\n"+e.statements.map(function(e){return"    "+n(e,r)+";\n"}).join("")+"}\n"},sheet:function(e,r,n){return"\n"+e.blocks.map(function(e){return n(e,r)}).join("\n")+"\n"}}},typeToToken.forEach(function(e,r){stringify.semantics.stringifiers[r]=function(r,n,t){return r.args.map(function(e){return t(e,n,r)}).join(" "+e+" ").trim()}});