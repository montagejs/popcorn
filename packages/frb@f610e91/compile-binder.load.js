montageDefine("f610e91","compile-binder",{dependencies:["./compile-observer","./observers","./binders","./algebra"],factory:function(e,n,r){function t(e){return t.semantics.compile(e)}var i=e("./compile-observer"),a=(e("./observers"),e("./binders")),o=e("./algebra"),s={type:"value"},l={type:"literal",value:!0};r.exports=t,t.semantics={compilers:{property:a.makePropertyBinder,get:a.makeGetBinder,has:a.makeHasBinder,only:a.makeOnlyBinder,one:a.makeOneBinder,rangeContent:a.makeRangeContentBinder,mapContent:a.makeMapContentBinder,reversed:a.makeReversedBinder,and:a.makeAndBinder,or:a.makeOrBinder},syntaxTypeCompile:{"default":function(e){return this.compile(e.args[0])},literal:function(e){if(null==e.value)return Function.noop;throw new Error("Can't bind to literal: "+e.value)},equals:function(e){return a.makeEqualityBinder(this.compile(e.args[0]),i(e.args[1]))},"if":function(e){return a.makeConditionalBinder(i(e.args[0]),this.compile(e.args[1]),this.compile(e.args[2]))},and_or:function(e){var n=o(e.args[0],s),r=o(e.args[1],s),t=this.compile(n[0]),a=this.compile(r[0]),l=i(n[1]),p=i(r[1]),c=i(e.args[0]),m=i(e.args[1]);return this.compilers[e.type](t,a,c,m,l,p)},everyBlock:function(e){var n=i(e.args[0]),r=o(e.args[1],l),t=this.compile(r[0]),s=i(r[1]);return a.makeEveryBlockBinder(n,t,s)},rangeContent:function(e){var n,r=i(e.args[0]);try{n=this.compile(e.args[0])}catch(t){n=Function.noop}return a.makeRangeContentBinder(r,n)},defined:function(e){var n=this.compile(e.args[0]);return a.makeDefinedBinder(n)},parent:function(e){var n=this.compile(e.args[0]);return a.makeParentBinder(n)},"with":function(e){var n=i(e.args[0]),r=this.compile(e.args[1]);return a.makeWithBinder(n,r)}},compile:function(e){var n,r=this.compilers;if(n=this.syntaxTypeCompile[e.type])return n.call(this,e);if(r.hasOwnProperty(e.type)){for(var t=[],a=i.semantics,o=0,s=e.args.length;o<s;o++)t.push(i.call(a,e.args[o]));return 1===t.length?r[e.type].call(null,t[0]):2===t.length?r[e.type].call(null,t[0],t[1]):r[e.type].apply(null,t)}throw new Error("Can't compile binder for "+JSON.stringify(e.type))}},t.semantics.syntaxTypeCompile.and=t.semantics.syntaxTypeCompile.or=t.semantics.syntaxTypeCompile.and_or}});